{"version":3,"file":"static/js/236.6b75555d.chunk.js","mappings":"yRAIaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,gNAYJE,EAAYF,EAAAA,GAAAA,MAAH,kFAKTG,GAAQH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,0VAiBLK,EAAeL,EAAAA,GAAAA,OAAH,kpB,sECpCZM,E,QAAUN,GAAAA,IAAH,gb,kKCYdO,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,KAAaC,MAAM,CAChCL,KAAMI,EAAAA,KAAaE,IAAI,EAAG,cAAcC,IAAI,GAAI,aAAaC,WAC7DN,SAAUE,EAAAA,KAAaE,IAAI,EAAG,cAAcE,WAC5CP,MAAOG,EAAAA,KAAaH,QAAQO,aAGjBC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,IAAD,WACE,SAAC,KAAD,CACEZ,cAAeA,EACfa,SATe,SAACC,EAAD,GAA0B,IAAjBC,EAAgB,EAAhBA,UAC5BJ,GAASK,EAAAA,EAAAA,KAAS,UAAKF,KACvBC,GACD,EAOKE,iBAAkBb,EAHpB,UAKE,UAAC,KAAD,YACE,UAAC,KAAD,CAAWc,QAAQ,OAAnB,WACE,0BAAM,cACN,SAAC,KAAD,CAAOC,GAAG,OAAOC,KAAK,OAAOC,YAAY,YAAYpB,KAAK,UAC1D,SAAC,KAAD,CACEA,KAAK,OACLqB,UAAU,MACVC,MAAO,CACLC,MAAO,MACPC,SAAU,OACVC,cAAe,mBAKrB,UAAC,KAAD,CAAWR,QAAQ,QAAnB,WACE,0BAAM,mBACN,SAAC,KAAD,CACEC,GAAG,QACHC,KAAK,QACLC,YAAY,aACZpB,KAAK,WAEP,SAAC,KAAD,CACEA,KAAK,QACLqB,UAAU,MACVC,MAAO,CACLC,MAAO,MACPC,SAAU,OACVC,cAAe,mBAKrB,UAAC,KAAD,CAAWR,QAAQ,WAAnB,WACE,0BAAM,cACN,SAAC,KAAD,CACEC,GAAG,WACHC,KAAK,WACLC,YAAY,mCACZpB,KAAK,cAEP,SAAC,KAAD,CACEA,KAAK,WACLqB,UAAU,MACVC,MAAO,CACLC,MAAO,MACPC,SAAU,OACVC,cAAe,mBAKrB,SAAC,KAAD,CAAcN,KAAK,SAAnB,SAA4B,mBAKrC,E,mBC7Fc,SAASO,IACtB,IAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,GAE1B,OACE,4BACE,SAAC,KAAD,WACE,2BAAO,oBAET,SAACtB,EAAD,IACCkB,IAAcG,IAAS,SAACE,EAAA,EAAD,MAG7B,C","sources":["components/ContactForm/ContactForm.styled.js","components/PhoneBook/PhoneBook.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { Form as FormikForm, Field as FormikInput } from 'formik';\n\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  margin: 0 auto;\n  width: 450px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 15px;\n  padding: 5px 5px;\n  font-size: large;\n  color: #494d5f;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\nexport const Field = styled(FormikInput)`\n  height: 30px;\n  outline: none;\n  padding: 10px;\n  border: none;\n  border-radius: 10px;\n  font-size: medium;\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 2px 0px;\n  background-color: #e5eaf5;\n\n  :active,\n  :focus {\n    outline: 1px solid #a0d2eb;\n    box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 2px 0px inset;\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  width: 200px;\n  height: 50px;\n  margin: 20px auto;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  font-size: 18px;\n\n  padding: 3px 24px;\n  border: none;\n  border-radius: 10px;\n  box-sizing: border-box;\n  text-decoration: none;\n  font-weight: 400;\n  color: #494d5f;\n  background-color: #e5eaf5;\n  text-align: center;\n\n  transition-property: background-color, transform;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.065, 0.445, 0.88, 0.195);\n\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 2px 0px;\n\n  :hover,\n  :active {\n    background-color: #d0bdf4;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 550px;\n  margin: 30px auto;\n  padding: 30px 20px;\n  border: solid 3px #eee;\n  box-shadow: 5px 5px 15px 5px #eeeeee;\n  color: #494d5f;\n  border-radius: 40px;\n\n  background: linear-gradient(\n    45deg,\n    rgba(229, 234, 245, 1) 0%,\n    rgba(160, 210, 235, 1) 20%,\n    rgba(208, 189, 244, 0.5522584033613445) 100%\n  );\n`;\n","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Formik, ErrorMessage } from 'formik';\n\nimport * as Yup from 'yup';\n\nimport {\n  Form,\n  FormLabel,\n  Field,\n  SubmitButton,\n} from '../ContactForm/ContactForm.styled';\nimport { Wrapper } from 'components/PhoneBook/PhoneBook.styled';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst Schema = Yup.object().shape({\n  name: Yup.string().min(6, 'Too Short!').max(20, 'Too Long!').required(),\n  password: Yup.string().min(7, 'Too Short!').required(),\n  email: Yup.string().email().required(),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (data, { resetForm }) => {\n    dispatch(register({ ...data }));\n    resetForm();\n  };\n\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={Schema}\n      >\n        <Form>\n          <FormLabel htmlFor=\"name\">\n            <span>Username</span>\n            <Field id=\"name\" type=\"text\" placeholder=\"Your Name\" name=\"name\" />\n            <ErrorMessage\n              name=\"name\"\n              component=\"div\"\n              style={{\n                color: 'red',\n                fontSize: '11px',\n                textTransform: 'uppercase',\n              }}\n            />\n          </FormLabel>\n\n          <FormLabel htmlFor=\"email\">\n            <span>Email address</span>\n            <Field\n              id=\"email\"\n              type=\"email\"\n              placeholder=\"Your Email\"\n              name=\"email\"\n            />\n            <ErrorMessage\n              name=\"email\"\n              component=\"div\"\n              style={{\n                color: 'red',\n                fontSize: '11px',\n                textTransform: 'uppercase',\n              }}\n            />\n          </FormLabel>\n\n          <FormLabel htmlFor=\"password\">\n            <span>Password</span>\n            <Field\n              id=\"password\"\n              type=\"password\"\n              placeholder=\"Your Password (min 7 characters)\"\n              name=\"password\"\n            />\n            <ErrorMessage\n              name=\"password\"\n              component=\"div\"\n              style={{\n                color: 'red',\n                fontSize: '11px',\n                textTransform: 'uppercase',\n              }}\n            />\n          </FormLabel>\n\n          <SubmitButton type=\"submit\">Register</SubmitButton>\n        </Form>\n      </Formik>\n    </Wrapper>\n  );\n};\n","import { Helmet } from 'react-helmet-async';\nimport { useSelector } from 'react-redux';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { selectErrorUser, selectIsLoadingUser } from '../redux/auth/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Register() {\n  const isLoading = useSelector(selectIsLoadingUser);\n  const error = useSelector(selectErrorUser);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n      {isLoading && !error && <Loader />}\n    </div>\n  );\n}\n"],"names":["Form","styled","FormikForm","FormLabel","Field","FormikInput","SubmitButton","Wrapper","initialValues","name","email","password","Schema","Yup","shape","min","max","required","RegisterForm","dispatch","useDispatch","onSubmit","data","resetForm","register","validationSchema","htmlFor","id","type","placeholder","component","style","color","fontSize","textTransform","Register","isLoading","useSelector","selectIsLoadingUser","error","selectErrorUser","Loader"],"sourceRoot":""}