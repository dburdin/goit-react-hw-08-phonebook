{"version":3,"file":"static/js/335.e9ca7ac5.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/PhoneBook/PhoneBook.styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { Form as FormikForm, Field as FormikInput } from 'formik';\n\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  margin: 0 auto;\n  width: 450px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 15px;\n  padding: 5px 5px;\n  font-size: large;\n  color: #494d5f;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\nexport const Field = styled(FormikInput)`\n  height: 30px;\n  outline: none;\n  border: none;\n  border-radius: 0;\n  font-size: medium;\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 2px 0px;\n  background-color: #e5eaf5;\n\n  :active,\n  :focus {\n    outline: 1px solid #a0d2eb;\n    box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 2px 0px inset;\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  width: 200px;\n  height: 50px;\n  margin: 20px auto;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  font-size: 18px;\n\n  padding: 3px 24px;\n  border: none;\n  border-radius: 10px;\n  box-sizing: border-box;\n  text-decoration: none;\n  font-weight: 400;\n  color: #494d5f;\n  background-color: #e5eaf5;\n  text-align: center;\n\n  transition-property: background-color, transform;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.065, 0.445, 0.88, 0.195);\n\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 2px 0px;\n\n  :hover,\n  :active {\n    background-color: #d0bdf4;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 550px;\n  margin: 30px auto;\n  padding: 30px 20px;\n  border: solid 3px #eee;\n  box-shadow: 5px 5px 15px 5px #eeeeee;\n  color: #494d5f;\n  border-radius: 40px;\n\n  background: linear-gradient(\n    45deg,\n    rgba(229, 234, 245, 1) 0%,\n    rgba(160, 210, 235, 1) 20%,\n    rgba(208, 189, 244, 0.5522584033613445) 100%\n  );\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.value;\nexport const selectIsLoadingContacts = state => state.contacts.item;\nexport const selectErrorContacts = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  }\n);\n","import { Formik, ErrorMessage } from 'formik';\n\nimport * as Yup from 'yup';\n\nimport { Form, FormLabel, Field, SubmitButton } from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst initialValues = { name: '', number: '' };\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .required()\n    .matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/, {\n      message:\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n    }),\n  number: Yup.string()\n    .min(5, 'Too Short!')\n    .required()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      {\n        message:\n          'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n      }\n    ),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const getSimiliarContact = (contact, formData) =>\n    contact.filter(\n      contact => contact.name.toLowerCase() === formData.name.toLowerCase()\n    );\n\n  const handleSubmit = (data, { resetForm }) => {\n    const similiarName = getSimiliarContact(contacts, data);\n\n    if (similiarName[0]) {\n      return window.alert(`${data.name} is already in contacts!`);\n    }\n\n    dispatch(addContact({ ...data }));\n\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <FormLabel htmlFor=\"name\">\n          <span>Name</span>\n          <Field id=\"name\" type=\"text\" name=\"name\" />\n          <ErrorMessage\n            name=\"name\"\n            component=\"div\"\n            style={{\n              color: 'red',\n              fontSize: '11px',\n              textTransform: 'uppercase',\n            }}\n          ></ErrorMessage>\n        </FormLabel>\n        <FormLabel htmlFor=\"number\">\n          <span>Number</span>\n          <Field id=\"number\" type=\"tel\" name=\"number\" />\n          <ErrorMessage\n            name=\"number\"\n            component=\"div\"\n            style={{\n              color: 'red',\n              fontSize: '11px',\n              textTransform: 'uppercase',\n            }}\n          ></ErrorMessage>\n        </FormLabel>\n        <SubmitButton type=\"submit\">Add Contact</SubmitButton>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 400px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 4px;\n  font-size: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 5px;\n  align-items: center;\n  font-size: 20px;\n  text-transform: capitalize;\n`;\n\nexport const DeleteButton = styled.button`\n  width: 70px;\n  height: auto;\n  margin: 0 auto;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 5px 5px;\n  border: none;\n  border-radius: 10px;\n  box-sizing: border-box;\n  text-decoration: none;\n  font-weight: 400;\n  color: #494d5f;\n  background-color: #e5eaf5;\n\n  transition-property: background-color, transform;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.065, 0.445, 0.88, 0.195);\n\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 2px 0px;\n\n  :hover,\n  :active {\n    background-color: #d0bdf4;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { ListItem, DeleteButton } from './Contact.styled';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <ListItem key={id}>\n      {name}: {number}\n      <DeleteButton onClick={handleDelete} type=\"button\">\n        Delete\n      </DeleteButton>\n    </ListItem>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { List } from './ContactList.styled';\nimport { Contact } from 'components/Contact/Contact';\nimport { useSelector } from 'react-redux';\n\nimport { selectVisibleContacts } from '../../redux/selectors';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {visibleContacts.map(({ name, number, id }) => {\n        return <Contact key={id} id={id} name={name} number={number} />;\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nexport const FilterField = styled.input`\n  width: 450px;\n  height: 30px;\n  margin: 20px 0;\n  outline: none;\n  border: none;\n  border-radius: 0;\n  font-size: medium;\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 2px 0px;\n\n  background-color: #e5eaf5;\n\n  :active,\n  :focus {\n    outline: 1px solid #a0d2eb;\n    box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 2px 0px inset;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nimport { FilterField } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterField = event => {\n    dispatch(setFilter(event.target.value.toLowerCase()));\n  };\n\n  return (\n    <FilterField\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"Find contacts by name\"\n      onChange={handleFilterField}\n      value={filter}\n    />\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\n\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList/';\nimport { Filter } from 'components/Filter/';\nimport { Loader } from 'components/Loader/Loader';\n\nimport {\n  selectContacts,\n  selectErrorContacts,\n  selectIsLoadingContacts,\n} from 'redux/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Wrapper } from 'components/PhoneBook/PhoneBook.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoadingContacts);\n  const error = useSelector(selectErrorContacts);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <section>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <Wrapper>\n        <h1>PhoneBook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        {isLoading && !error && <Loader />}\n        {contacts.length > 0 ? (\n          <div>\n            <Filter />\n            <ContactList />\n          </div>\n        ) : (\n          'You have no contacts'\n        )}\n      </Wrapper>\n    </section>\n  );\n}\n"],"names":["Form","styled","FormikForm","FormLabel","Field","FormikInput","SubmitButton","Wrapper","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoadingContacts","item","selectErrorContacts","error","selectVisibleContacts","contact","toLowerCase","includes","initialValues","number","validationSchema","Yup","min","required","matches","message","ContactForm","dispatch","useDispatch","useSelector","onSubmit","data","formData","resetForm","similiarName","window","alert","addContact","autoComplete","htmlFor","id","type","component","style","color","fontSize","textTransform","List","ListItem","DeleteButton","Contact","onClick","deleteContact","ContactList","visibleContacts","FilterField","Filter","placeholder","onChange","event","setFilter","target","Contacts","isLoading","useEffect","fetchContacts","Loader"],"sourceRoot":""}